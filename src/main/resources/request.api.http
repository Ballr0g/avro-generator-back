# Direct handles to Apicurio, requires Apicurio Registry running to work (see docker-compose.yaml).

# List all available subjects.

GET http://{{docker_host}}/subjects

###
# List all versions under a specific subject.

GET http://{{docker_host}}/subjects/{{test_subject}}/versions

###
# Get schema by specific subject and version.

GET http://{{docker_host}}/subjects/{{test_subject}}/versions/{{test_version}}

###
# Add a new schema under the specified subject - invalid schema.

POST http://{{docker_host}}/subjects/{{test_subject}}/versions
Content-Type: application/json

{
  "schema": "{ \"type\": \"record\", \"name\": \"test_invalid\", \"fields\": [ { \"type\": \"string\", \"name\": \"field\" }, { \"type\": \"int\", \"name\": \"field2\" } ] }"
}

###
# Delete all schemas under the specified subject.

DELETE http://{{docker_host}}/subjects/{{test_subject}}

###

DELETE http://{{docker_host}}/subjects/{{test_subject}}/versions/{{test_version}}

### ------------------------------------------------------------------
# List all available subjects.

GET http://{{host}}}/avroGenerator/v1/getSubjects

###
# List all versions under a specific subject.

GET http://{{host}}/avroGenerator/v1/getSchemaVersions/{{test_subject}}

###
# Get schema by subject and version.

GET http://{{host}}/avroGenerator/v1/getSchema/{{test_subject}}/{{test_version}}

###
# Add a new schema under the specified subject.

POST http://{{host}}/avroGenerator/v1/createSchema
Content-Type: application/json

{
  "subjectName": "666",
  "schema": "{ \"type\": \"record\", \"name\": \"test\", \"fields\": [ { \"type\": \"string\", \"name\": \"field1\" }, { \"type\": \"int\", \"name\": \"field2\" } ] }"
}

###
# Delete all schemas under the specified subject.

DELETE http://{{host}}/avroGenerator/v1/deleteSubject
Content-Type: application/json

{
  "subjectName": "666"
}

###
# Delete schema version under the specified subject.

DELETE http://{{host}}/avroGenerator/v1/deleteSchema
Content-Type: application/json

{
  "subjectName": "666",
  "schemaVersion": "1"
}
